/*
 * Copyright (c) 2013-2014, ARM Limited
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */



void Calc_Filter(int n, int m, float A[static const restrict n][m]);

static void Calc_Filter_inner_summary(int m, float A[static const restrict m]) {
    for (int j = 0; j<m;j+=1)
        A[j] = 0;
}

void Calc_Filter_inner(int m, float A[static const restrict m]) __attribute__((pencil_access(Calc_Filter_inner_summary)));

void Calc_Filter(int n, int m, float A[static const restrict n][m]) {
#pragma scop
    for (int i = 0; i<n;i+=1) {
        Calc_Filter_inner(m,A[i]);
    }
#pragma endscop
}


/* all {@check {CHECK: static void Calc_Filter_inner_summary}} */
/* all {@check {CHECK: static void Calc_Filter_inner_summary}} */
/* all {@check {CHECK: void Calc_Filter_inner}} */
/* all {@check {CHECK: (pencil_access(Calc_Filter_inner_summary}} */
