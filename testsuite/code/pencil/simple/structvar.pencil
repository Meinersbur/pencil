/*
 * Copyright (c) 2013-2014, ARM Limited
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

struct dcomplex {
  double re;
  double im;
};

void foo(int n, struct dcomplex in[static const restrict n],
                struct dcomplex out[static const restrict n]) {
  out[0] = in[0];
  for (int i = 1; i < n; i++) {
    struct dcomplex temp;
    temp = in[i];
    out[i] = temp;
  }
}

/* all {struct dcomplex in[10];} */
/* all {struct dcomplex out[10];} */
/* all {for(int i = 0; i < 10; i++) in[i].re = 1.0 * i;} */
/* all {for(int i = 0; i < 10; i++) in[i].im = 2.0 * i;} */
/* all {foo(10, in, out);} */
/* all {@assert {in[0].re == out[0].re}} */
/* all {@assert {in[0].im == out[0].im}} */
/* all {@assert {in[4].re == out[4].re}} */
/* all {@assert {in[4].im == out[4].im}} */
/* all {@assert {in[7].re == out[7].re}} */
/* all {@assert {in[7].im == out[7].im}} */
