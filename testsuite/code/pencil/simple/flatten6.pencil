/*
 * Copyright (c) 2013-2014, ARM Limited
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */


struct S0
{
    int f0;
    int aa[10];
};


struct S1
{
    int f0;
    int f1;
    struct S0 s1;
    struct S0 s2;
};

struct S1 foo(struct S1 s)
{
    return s;
}

/* optimizer {@require-option {-fflatten-structs}} */
/* all {struct S1 s1;} */
/* all {s1.f0 = 0;} */
/* all {s1.f1 = 1;} */
/* all {s1.s1.f0 = 3;} */
/* all {s1.s2.aa[5] = 4;} */
/* linker {struct S1 s2 = foo(s1);} */
/* optimizer {struct S1 s2 = foo(s1.f0, s1.f1, s1.s1.f0, s1.s1.aa, s1.s2.f0, s1.s2.aa);} */
/* all {@assert {s1.f0 == s2.f0}} */
/* all {@assert {s1.f1 == s2.f1}} */
/* all {@assert {s1.s1.f0 == s2.s1.f0}} */
/* all {@assert {s1.s2.aa[5] == s1.s2.aa[5]}} */
