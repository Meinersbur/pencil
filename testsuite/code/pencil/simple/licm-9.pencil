/*
 * Copyright (c) 2013-2014, ARM Limited
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

void foo(int A[const restrict static 10], int N)
{
    for(int i =0; i < N; i++)
    {
        int lala = N * N; //4
        int gg = lala * lala; // 16
        A[i] += A[i + N * N] + (lala + gg);

    }
}
/* all {int A[10] = {1,1,1,1,1,1,1,1,1,1};} */
/* all {foo(A, 2);} */
/* all {@assert {A[0] == 22}} */
/* all {@assert {A[1] == 22}} */
/* all {@assert {A[2] == 1}} */
/* all {@assert {A[3] == 1}} */
/* all {@assert {A[4] == 1}} */
/* all {@assert {A[5] == 1}} */
/* all {@assert {A[6] == 1}} */
/* all {@assert {A[7] == 1}} */
/* all {@assert {A[8] == 1}} */
/* all {@assert {A[9] == 1}} */
/* optimizer {@require-option {-flicm}} */
/* optimizer {@check {CHECK: loop_invariant}} */
/* optimizer {@check {CHECK: for}} */
/* optimizer {@check {CHECK: loop_invariant}} */
/* optimizer {@check {CHECK-NOT: lala}} */
/* optimizer {@check {CHECK-NOT: gg}} */
