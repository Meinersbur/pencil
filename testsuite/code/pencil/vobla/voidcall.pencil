/*
 * Copyright (c) 2013-2014, ARM Limited
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

struct ArrayView{
int base_size;
int offset;
int increment;
int view_size;
};
struct MatrixView{
struct ArrayView dim1;
struct ArrayView dim2;
int flag;
};
void scale_pi (const double A_1,struct ArrayView var_2,double X_3[1],struct ArrayView var_4,double Y_5[1]);
void test ();
void scale_pi (const double A_1,struct ArrayView var_2,double X_3[1],struct ArrayView var_4,double Y_5[1])
{
{
{
X_3[0] = (A_1*3.14);
}
{
Y_5[0] = (A_1*(-3.14));
}
}
}
void test ()
{
struct ArrayView var_8;
struct ArrayView var_9;
double Xout_6[1] = {0.0};
double Yout_7[1] = {0.0};
{
{
scale_pi(122333.4444,var_8,Xout_6,var_9,Yout_7);
}
}
}
