/*
 * Copyright (c) 2013-2014, ARM Limited
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

void swap (const int N_1,double X_2[restrict const static N_1],double Y_3[restrict const static N_1]);
void swap (const int N_1,double X_2[restrict const static N_1],double Y_3[restrict const static N_1])
{
double temp_4[N_1];
{
{
#pragma pencil independent
for(int var_5 = 0;var_5 <= N_1;var_5 += 1){
{
temp_4[var_5] = X_2[var_5];
}
}
}
{
#pragma pencil independent
for(int var_6 = 0;var_6 <= N_1;var_6 += 1){
{
X_2[var_6] = Y_3[var_6];
}
}
}
{
#pragma pencil independent
for(int var_7 = 0;var_7 <= N_1;var_7 += 1){
{
Y_3[var_7] = temp_4[var_7];
}
}
}
}
}
