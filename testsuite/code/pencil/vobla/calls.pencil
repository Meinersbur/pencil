/*
 * Copyright (c) 2013-2014, ARM Limited
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

const double get_max (const int S_1,const double A_2[restrict const static S_1]);
const double get_max_matrix (const int N_5,const int M_6,const double A_7[restrict const static N_5][M_6]);
const double get_max (const int S_1,const double A_2[restrict const static S_1])
{
double res_3;
{
{
res_3 = A_2[0];
}
{
for(int i_4 = 0;i_4 <= (S_1-1);i_4 += 1){
{
res_3 = (max(res_3,A_2[i_4]));
}
}
}
{
return (res_3);
}
}
}
const double get_max_matrix (const int N_5,const int M_6,const double A_7[restrict const static N_5][M_6])
{
double res_8 = 0.0;
double tmp_10;
{
{
for(int i_9 = 0;i_9 <= (N_5-1);i_9 += 1){
{
tmp_10 = (get_max(M_6,A_7[i_9]));
}
{
if((tmp_10>res_8)){
{
res_8 = tmp_10;
}
}
}
}
}
{
return (res_8);
}
}
}
